import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="string-inclusion-methods-包含方法">String Inclusion Methods (包含方法)<a class="anchor" href="#string-inclusion-methods-包含方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<ul>\n<li>Check if elements in a string</li>\n<li><code>startsWith()</code>\n<ul>\n<li>The startsWith() and includes() methods accept an optional second argument that indicates the position to start searching from within the string.</li>\n</ul>\n</li>\n<li><code>endsWith()</code>\n<ul>\n<li>The endsWith() method accepts an optional second argument that indicates the position that should be treated as the end of the string.</li>\n</ul>\n</li>\n<li><code>includes()</code></li>\n</ul>',frontmatter={aliases:["String Inclusion Methods (包含方法)"],title:"String Inclusion Methods (包含方法)",topic:["String"],type:"D",tags:["JavaScript"],DateStarted:"2024-03-02T00:00:00.000Z",DateModified:"2024-04-18T00:00:00.000Z",Datereviewed:"2024-03-02T00:00:00.000Z",reviewed:null,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"String Inclusion Methods (包含方法)",category:"Programming",minutes:1,words:55},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/string/string-instance-methods/string-inclusion-methods-包含方法.md",url=void 0;function rawContent(){return"\n# String Inclusion Methods (包含方法)\n\n- Check if elements in a string\n- `startsWith()`\n  - The startsWith() and includes() methods accept an optional second argument that indicates the position to start searching from within the string.\n- `endsWith()`\n  - The endsWith() method accepts an optional second argument that indicates the position that should be treated as the end of the string.\n- `includes()`\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"string-inclusion-methods-包含方法",text:"String Inclusion Methods (包含方法)#"}]}const Content=createComponent(((t,n,e)=>{const{layout:i,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};