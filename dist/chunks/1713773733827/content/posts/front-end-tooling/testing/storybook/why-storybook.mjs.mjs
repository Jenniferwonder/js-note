import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="why-storybook">Why Storybook<a class="anchor" href="#why-storybook"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h3 id="helps-you-build-ui-components-in-isolation-from-your-apps-business-logic-data-and-context">helps you build UI components in isolation from your app’s business logic, data, and context<a class="anchor" href="#helps-you-build-ui-components-in-isolation-from-your-apps-business-logic-data-and-context"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>makes it easy to develop hard-to-reach states</li>\n</ul>\n<h3 id="save-these-ui-states-as-stories-to-revisit-during-development-testing-or-qa">Save these UI states as <em>stories</em> to revisit during development, testing, or QA<a class="anchor" href="#save-these-ui-states-as-stories-to-revisit-during-development-testing-or-qa"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="to-build-test-and-visualize-ui-components-in-isolation">to build, test and visualize UI components in isolation<a class="anchor" href="#to-build-test-and-visualize-ui-components-in-isolation"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="runs-alongside-your-app-in-development-mode">runs alongside your app in development mode<a class="anchor" href="#runs-alongside-your-app-in-development-mode"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="build-our-ui-following-a-component-driven-development-cdd-methodology">build our UI following a <a href="https://www.componentdriven.org/">Component-Driven Development</a> (CDD) methodology<a class="anchor" href="#build-our-ui-following-a-component-driven-development-cdd-methodology"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Bottom-up</li>\n<li>Component > Screen</li>\n</ul>',frontmatter={category:"Front-End Tooling",aliases:["Why Storybook"],title:"Why Storybook",topic:["Testing"],type:"D",tags:["Testing","Storybook"],DateStarted:"2024-02-29T00:00:00.000Z",DateModified:"2024-04-18T00:00:00.000Z",Datereviewed:null,reviewed:null,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"Why Storybook",minutes:1,words:58},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-tooling/testing/storybook/why-storybook.md",url=void 0;function rawContent(){return"\n# Why Storybook\n\n### helps you build UI components in isolation from your app's business logic, data, and context\n\n- makes it easy to develop hard-to-reach states\n\n### Save these UI states as _stories_ to revisit during development, testing, or QA\n\n### to build, test and visualize UI components in isolation\n\n### runs alongside your app in development mode\n\n### build our UI following a [Component-Driven Development](https://www.componentdriven.org/) (CDD) methodology\n\n- Bottom-up\n- Component > Screen\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"why-storybook",text:"Why Storybook#"},{depth:3,slug:"helps-you-build-ui-components-in-isolation-from-your-apps-business-logic-data-and-context",text:"helps you build UI components in isolation from your app’s business logic, data, and context#"},{depth:3,slug:"save-these-ui-states-as-stories-to-revisit-during-development-testing-or-qa",text:"Save these UI states as stories to revisit during development, testing, or QA#"},{depth:3,slug:"to-build-test-and-visualize-ui-components-in-isolation",text:"to build, test and visualize UI components in isolation#"},{depth:3,slug:"runs-alongside-your-app-in-development-mode",text:"runs alongside your app in development mode#"},{depth:3,slug:"build-our-ui-following-a-component-driven-development-cdd-methodology",text:"build our UI following a Component-Driven Development (CDD) methodology#"}]}const Content=createComponent(((o,e,n)=>{const{layout:t,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};