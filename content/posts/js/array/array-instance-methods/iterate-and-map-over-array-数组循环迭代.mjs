import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1713773016041/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/array/array-instance-methods/iterate-and-map-over-array-数组循环迭代.md",collection="posts",slug="js/array/array-instance-methods/iterate-and-map-over-array-数组循环迭代",body="\n# Iterate and Loop over Array-数组循环迭代\n\n---\n\nBasic\n\n### Return an array computed from original\n\nBack:\n\n- `.map()`  \n📌: JS::JS-Array  \n🏷️: JS-Array\n\x3c!--ID: 1706600287395--\x3e\n\n---\n\n---\n\nBasic\n\n### Iterative Methods-数组循环迭代方法\n\nBack:\n\n- `.forEach()`\n- 相当于使用 for 循环遍历数组\n\x3c!--ID: 1706600287399--\x3e\n\n---\n\n---\n\nBasic\n\n### ES6 Destructuring (Iterator-迭代器方法)\n\nBack:\n\n- `for (const [i, ele] of a.entries()){ }`\n- to split out the key/value pairs inside a loop\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691247030389.png)\n- **`.keys()`**\n  - return an iterator of the array's indices\n- **`.values()`**\n  - return an iterator of the array’s elements/values\n- **`.entries()`**\n  - return an iterator of index/value pairs\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691246935131.png)\n\x3c!--ID: 1706600287402--\x3e\n\n---\n\n\x3c!--SR:!2024-01-30,1,230--\x3e\n",data={title:"Iterate and Loop over Array-数组循环迭代",DateStarted:new Date(17062272e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-instance-methods/iterate-and-map-over-array-数组循环迭代.md",rawData:void 0},html='<h1 id="iterate-and-loop-over-array-数组循环迭代">Iterate and Loop over Array-数组循环迭代<a class="anchor" href="#iterate-and-loop-over-array-数组循环迭代"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<hr>\n<p>Basic</p>\n<h3 id="return-an-array-computed-from-original">Return an array computed from original<a class="anchor" href="#return-an-array-computed-from-original"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>.map()</code><br>\n📌: JS::JS-Array<br>\n🏷️: JS-Array</li>\n</ul>\n\x3c!--ID: 1706600287395--\x3e\n<hr>\n<hr>\n<p>Basic</p>\n<h3 id="iterative-methods-数组循环迭代方法">Iterative Methods-数组循环迭代方法<a class="anchor" href="#iterative-methods-数组循环迭代方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>.forEach()</code></li>\n<li>相当于使用 for 循环遍历数组</li>\n</ul>\n\x3c!--ID: 1706600287399--\x3e\n<hr>\n<hr>\n<p>Basic</p>\n<h3 id="es6-destructuring-iterator-迭代器方法">ES6 Destructuring (Iterator-迭代器方法)<a class="anchor" href="#es6-destructuring-iterator-迭代器方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>for (const [i, ele] of a.entries()){ }</code></li>\n<li>to split out the key/value pairs inside a loop</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691247030389.png" alt=""></li>\n<li><strong><code>.keys()</code></strong>\n<ul>\n<li>return an iterator of the array’s indices</li>\n</ul>\n</li>\n<li><strong><code>.values()</code></strong>\n<ul>\n<li>return an iterator of the array’s elements/values</li>\n</ul>\n</li>\n<li><strong><code>.entries()</code></strong>\n<ul>\n<li>return an iterator of index/value pairs</li>\n</ul>\n</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691246935131.png" alt=""></li>\n</ul>\n\x3c!--ID: 1706600287402--\x3e\n<hr>\n\x3c!--SR:!2024-01-30,1,230--\x3e',frontmatter={draft:!1,aliases:["Iterate and Loop over Array-数组循环迭代"],Datereviewed:"2024-01-26T00:00:00.000Z",title:"Iterate and Loop over Array-数组循环迭代",topic:["Array"],type:"D",tags:["JavaScript"],DateStarted:"2024-01-26T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",reviewed:1,difficulty:"Good",status:["ToUseMore"],comment:null,"linter-yaml-title-alias":"Iterate and Loop over Array-数组循环迭代",category:"Programming",minutes:1,words:84},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-instance-methods/iterate-and-map-over-array-数组循环迭代.md",url=void 0;function rawContent(){return"\n# Iterate and Loop over Array-数组循环迭代\n\n---\n\nBasic\n\n### Return an array computed from original\n\nBack:\n\n- `.map()`  \n📌: JS::JS-Array  \n🏷️: JS-Array\n\x3c!--ID: 1706600287395--\x3e\n\n---\n\n---\n\nBasic\n\n### Iterative Methods-数组循环迭代方法\n\nBack:\n\n- `.forEach()`\n- 相当于使用 for 循环遍历数组\n\x3c!--ID: 1706600287399--\x3e\n\n---\n\n---\n\nBasic\n\n### ES6 Destructuring (Iterator-迭代器方法)\n\nBack:\n\n- `for (const [i, ele] of a.entries()){ }`\n- to split out the key/value pairs inside a loop\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691247030389.png)\n- **`.keys()`**\n  - return an iterator of the array's indices\n- **`.values()`**\n  - return an iterator of the array’s elements/values\n- **`.entries()`**\n  - return an iterator of index/value pairs\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691246935131.png)\n\x3c!--ID: 1706600287402--\x3e\n\n---\n\n\x3c!--SR:!2024-01-30,1,230--\x3e\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"iterate-and-loop-over-array-数组循环迭代",text:"Iterate and Loop over Array-数组循环迭代#"},{depth:3,slug:"return-an-array-computed-from-original",text:"Return an array computed from original#"},{depth:3,slug:"iterative-methods-数组循环迭代方法",text:"Iterative Methods-数组循环迭代方法#"},{depth:3,slug:"es6-destructuring-iterator-迭代器方法",text:"ES6 Destructuring (Iterator-迭代器方法)#"}]}const Content=createComponent(((n,e,r)=>{const{layout:t,...a}=frontmatter;return a.file=file,a.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),iterateAndMapOverArray_______=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,iterateAndMapOverArray_______,slug};