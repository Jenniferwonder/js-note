import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1713773016041/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/array/array-basics/ways-to-create-arrays-创建数组.md",collection="posts",slug="js/array/array-basics/ways-to-create-arrays-创建数组",body="\n# Ways to Create Arrays-创建数组\n\n---\n\nBasic\n\n### 创建数组的三种方法\n\nBack:\n\n- 使用数组构造函数 `new Array()`\n- 字面量标记法 `[ ]`\n- 静态方法 `Array.from()` （introduced in ES6）  \n🏷️: JS-Array  \n📌: JS::JS-Array\n\x3c!--ID: 1706536857988--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个空数组\n\nBack:\n\n- let colors = `new Array();`\n- let colors = `[ ]`\n\x3c!--ID: 1706536857998--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个 20 位的空数组\n\nBack:\n\n- `let colors = new Array(20);`\n- `let colors = Array(20); // Omit the 'new' keyword: `\n\x3c!--ID: 1706536858009--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建数组 `[red, blue, green]`\n\nBack:\n\n- ✅ 字面量标记法：`let colors = [red, blue, green];`\n- 构造函数法：`let colors = new Array(red, blue, green);`\n- 静态方法：`let colors = Array.of(red, blue, green);`\n\x3c!--ID: 1706536858020--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建含 3 个值为 1 元素的数组 (`[1, 1, 1]`)\n\nBack:\n\n- 法 1：`Array.from({ length: 3}, () => 1)`\n- 法 2：`Array(3).fill(1,0,2)\n\x3c!--ID: 1706536858031--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建含 3 个数组递增元素的数组 (`[1, 2, 3]`)\n\nBack:\n\n- `Array.from({ length: 3}, (_, i) => i+1)`\n\x3c!--ID: 1706536858042--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个指定类名下 DOM 元素的数组\n\nBack:\n\n- `Array.from(document.querySelectorAll('.className'), function)`\n\x3c!--ID: 1706536858052--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 将字符串拆分为对应字符的数组\n\nBack:\n\n- `alert(Array.from(Matt)); // [M, a, t, t]`\n\x3c!--ID: 1706537026589--\x3e\n\n---\n\n---\n\nBasic\n\n### Convert Set (s) and Map (m) into an new Array Instance\n\nBack:\n\n- ![1691244271831.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152053906-js-array.png)\n\x3c!--ID: 1706536858072--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### `.fill(1, 2, 5)` 含义\n\nBack:\n\n- fill an array with the specified value 1 from index 2 to 5\n\x3c!--ID: 1706536858081--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### Turn variables into Array\n\nBack:\n\n- `alert(Array.of(1,2,3,4)) // [1,2,3,4] `\n- `alert(Array.of(undefined)) // [undefined]`\n- `alert(Array.of(...[,,,])) // [undefined, undefined, undefined]`\n\x3c!--ID: 1706536858091--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### `Array.from()` 用途、参数\n\nBack:\n\n- used for converting array-like constructs into an array instance\n- `Array.from()` performs a shallow **copy** of an existing array\n- 1st Arg\n  - arrayLike object: anything that is iterable or has a property length and indexed elements\n- 2nd Arg (Optional)\n  - map function argument\n  - same with `Array.from().map()`\n  - [Iterate and Map over Array (数组循环迭代)](../iterate-and-map-over-array)\n- 3rd Arg (Optional)\n- ![1691244947152.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152054341.png-js-array)\n\n\x3c!--ID: 1706536858100--\x3e\n\n---\n\n\x3c!--SR:!2024-02-05,7,250--\x3e\n",data={title:"Ways to Create Arrays-创建数组",DateStarted:new Date(17062272e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-basics/ways-to-create-arrays-创建数组.md",rawData:void 0},html='<h1 id="ways-to-create-arrays-创建数组">Ways to Create Arrays-创建数组<a class="anchor" href="#ways-to-create-arrays-创建数组"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<hr>\n<p>Basic</p>\n<h3 id="创建数组的三种方法">创建数组的三种方法<a class="anchor" href="#创建数组的三种方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>使用数组构造函数 <code>new Array()</code></li>\n<li>字面量标记法 <code>[ ]</code></li>\n<li>静态方法 <code>Array.from()</code> （introduced in ES6）<br>\n🏷️: JS-Array<br>\n📌: JS::JS-Array</li>\n</ul>\n\x3c!--ID: 1706536857988--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建一个空数组">创建一个空数组<a class="anchor" href="#创建一个空数组"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>let colors = <code>new Array();</code></li>\n<li>let colors = <code>[ ]</code></li>\n</ul>\n\x3c!--ID: 1706536857998--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建一个-20-位的空数组">创建一个 20 位的空数组<a class="anchor" href="#创建一个-20-位的空数组"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>let colors = new Array(20);</code></li>\n<li><code>let colors = Array(20); // Omit the \'new\' keyword: </code></li>\n</ul>\n\x3c!--ID: 1706536858009--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建数组-red-blue-green">创建数组 <code>[red, blue, green]</code><a class="anchor" href="#创建数组-red-blue-green"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>✅ 字面量标记法：<code>let colors = [red, blue, green];</code></li>\n<li>构造函数法：<code>let colors = new Array(red, blue, green);</code></li>\n<li>静态方法：<code>let colors = Array.of(red, blue, green);</code></li>\n</ul>\n\x3c!--ID: 1706536858020--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建含-3-个值为-1-元素的数组-1-1-1">创建含 3 个值为 1 元素的数组 (<code>[1, 1, 1]</code>)<a class="anchor" href="#创建含-3-个值为-1-元素的数组-1-1-1"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>法 1：<code>Array.from({ length: 3}, () => 1)</code></li>\n<li>法 2：`Array(3).fill(1,0,2)</li>\n</ul>\n\x3c!--ID: 1706536858031--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建含-3-个数组递增元素的数组-1-2-3">创建含 3 个数组递增元素的数组 (<code>[1, 2, 3]</code>)<a class="anchor" href="#创建含-3-个数组递增元素的数组-1-2-3"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>Array.from({ length: 3}, (_, i) => i+1)</code></li>\n</ul>\n\x3c!--ID: 1706536858042--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="创建一个指定类名下-dom-元素的数组">创建一个指定类名下 DOM 元素的数组<a class="anchor" href="#创建一个指定类名下-dom-元素的数组"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>Array.from(document.querySelectorAll(\'.className\'), function)</code></li>\n</ul>\n\x3c!--ID: 1706536858052--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="将字符串拆分为对应字符的数组">将字符串拆分为对应字符的数组<a class="anchor" href="#将字符串拆分为对应字符的数组"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>alert(Array.from(Matt)); // [M, a, t, t]</code></li>\n</ul>\n\x3c!--ID: 1706537026589--\x3e\n<hr>\n<hr>\n<p>Basic</p>\n<h3 id="convert-set-s-and-map-m-into-an-new-array-instance">Convert Set (s) and Map (m) into an new Array Instance<a class="anchor" href="#convert-set-s-and-map-m-into-an-new-array-instance"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152053906-js-array.png" alt="1691244271831.png"></li>\n</ul>\n\x3c!--ID: 1706536858072--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="fill1-2-5-含义"><code>.fill(1, 2, 5)</code> 含义<a class="anchor" href="#fill1-2-5-含义"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>fill an array with the specified value 1 from index 2 to 5</li>\n</ul>\n\x3c!--ID: 1706536858081--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="turn-variables-into-array">Turn variables into Array<a class="anchor" href="#turn-variables-into-array"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>alert(Array.of(1,2,3,4)) // [1,2,3,4] </code></li>\n<li><code>alert(Array.of(undefined)) // [undefined]</code></li>\n<li><code>alert(Array.of(...[,,,])) // [undefined, undefined, undefined]</code></li>\n</ul>\n\x3c!--ID: 1706536858091--\x3e\n<hr>\n\x3c!--SR:!2024-02-01,3,250--\x3e\n<hr>\n<p>Basic</p>\n<h3 id="arrayfrom-用途参数"><code>Array.from()</code> 用途、参数<a class="anchor" href="#arrayfrom-用途参数"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>used for converting array-like constructs into an array instance</li>\n<li><code>Array.from()</code> performs a shallow <strong>copy</strong> of an existing array</li>\n<li>1st Arg\n<ul>\n<li>arrayLike object: anything that is iterable or has a property length and indexed elements</li>\n</ul>\n</li>\n<li>2nd Arg (Optional)\n<ul>\n<li>map function argument</li>\n<li>same with <code>Array.from().map()</code></li>\n<li><a href="../iterate-and-map-over-array">Iterate and Map over Array (数组循环迭代)</a></li>\n</ul>\n</li>\n<li>3rd Arg (Optional)</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152054341.png-js-array" alt="1691244947152.png"></li>\n</ul>\n\x3c!--ID: 1706536858100--\x3e\n<hr>\n\x3c!--SR:!2024-02-05,7,250--\x3e',frontmatter={draft:!1,Datereviewed:"2024-01-26T00:00:00.000Z",difficulty:null,comment:null,aliases:["Ways to Create Arrays-创建数组"],title:"Ways to Create Arrays-创建数组",type:"D",topic:["Array"],tags:["JavaScript"],DateStarted:"2024-01-26T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",reviewed:1,status:["Mature"],"linter-yaml-title-alias":"Ways to Create Arrays-创建数组",category:"Programming",minutes:2,words:317},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-basics/ways-to-create-arrays-创建数组.md",url=void 0;function rawContent(){return"\n# Ways to Create Arrays-创建数组\n\n---\n\nBasic\n\n### 创建数组的三种方法\n\nBack:\n\n- 使用数组构造函数 `new Array()`\n- 字面量标记法 `[ ]`\n- 静态方法 `Array.from()` （introduced in ES6）  \n🏷️: JS-Array  \n📌: JS::JS-Array\n\x3c!--ID: 1706536857988--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个空数组\n\nBack:\n\n- let colors = `new Array();`\n- let colors = `[ ]`\n\x3c!--ID: 1706536857998--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个 20 位的空数组\n\nBack:\n\n- `let colors = new Array(20);`\n- `let colors = Array(20); // Omit the 'new' keyword: `\n\x3c!--ID: 1706536858009--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建数组 `[red, blue, green]`\n\nBack:\n\n- ✅ 字面量标记法：`let colors = [red, blue, green];`\n- 构造函数法：`let colors = new Array(red, blue, green);`\n- 静态方法：`let colors = Array.of(red, blue, green);`\n\x3c!--ID: 1706536858020--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建含 3 个值为 1 元素的数组 (`[1, 1, 1]`)\n\nBack:\n\n- 法 1：`Array.from({ length: 3}, () => 1)`\n- 法 2：`Array(3).fill(1,0,2)\n\x3c!--ID: 1706536858031--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建含 3 个数组递增元素的数组 (`[1, 2, 3]`)\n\nBack:\n\n- `Array.from({ length: 3}, (_, i) => i+1)`\n\x3c!--ID: 1706536858042--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 创建一个指定类名下 DOM 元素的数组\n\nBack:\n\n- `Array.from(document.querySelectorAll('.className'), function)`\n\x3c!--ID: 1706536858052--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### 将字符串拆分为对应字符的数组\n\nBack:\n\n- `alert(Array.from(Matt)); // [M, a, t, t]`\n\x3c!--ID: 1706537026589--\x3e\n\n---\n\n---\n\nBasic\n\n### Convert Set (s) and Map (m) into an new Array Instance\n\nBack:\n\n- ![1691244271831.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152053906-js-array.png)\n\x3c!--ID: 1706536858072--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### `.fill(1, 2, 5)` 含义\n\nBack:\n\n- fill an array with the specified value 1 from index 2 to 5\n\x3c!--ID: 1706536858081--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### Turn variables into Array\n\nBack:\n\n- `alert(Array.of(1,2,3,4)) // [1,2,3,4] `\n- `alert(Array.of(undefined)) // [undefined]`\n- `alert(Array.of(...[,,,])) // [undefined, undefined, undefined]`\n\x3c!--ID: 1706536858091--\x3e\n\n---\n\n\x3c!--SR:!2024-02-01,3,250--\x3e\n\n---\n\nBasic\n\n### `Array.from()` 用途、参数\n\nBack:\n\n- used for converting array-like constructs into an array instance\n- `Array.from()` performs a shallow **copy** of an existing array\n- 1st Arg\n  - arrayLike object: anything that is iterable or has a property length and indexed elements\n- 2nd Arg (Optional)\n  - map function argument\n  - same with `Array.from().map()`\n  - [Iterate and Map over Array (数组循环迭代)](../iterate-and-map-over-array)\n- 3rd Arg (Optional)\n- ![1691244947152.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/202404152054341.png-js-array)\n\n\x3c!--ID: 1706536858100--\x3e\n\n---\n\n\x3c!--SR:!2024-02-05,7,250--\x3e\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"ways-to-create-arrays-创建数组",text:"Ways to Create Arrays-创建数组#"},{depth:3,slug:"创建数组的三种方法",text:"创建数组的三种方法#"},{depth:3,slug:"创建一个空数组",text:"创建一个空数组#"},{depth:3,slug:"创建一个-20-位的空数组",text:"创建一个 20 位的空数组#"},{depth:3,slug:"创建数组-red-blue-green",text:"创建数组 [red, blue, green]#"},{depth:3,slug:"创建含-3-个值为-1-元素的数组-1-1-1",text:"创建含 3 个值为 1 元素的数组 ([1, 1, 1])#"},{depth:3,slug:"创建含-3-个数组递增元素的数组-1-2-3",text:"创建含 3 个数组递增元素的数组 ([1, 2, 3])#"},{depth:3,slug:"创建一个指定类名下-dom-元素的数组",text:"创建一个指定类名下 DOM 元素的数组#"},{depth:3,slug:"将字符串拆分为对应字符的数组",text:"将字符串拆分为对应字符的数组#"},{depth:3,slug:"convert-set-s-and-map-m-into-an-new-array-instance",text:"Convert Set (s) and Map (m) into an new Array Instance#"},{depth:3,slug:"fill1-2-5-含义",text:".fill(1, 2, 5) 含义#"},{depth:3,slug:"turn-variables-into-array",text:"Turn variables into Array#"},{depth:3,slug:"arrayfrom-用途参数",text:"Array.from() 用途、参数#"}]}const Content=createComponent(((n,e,a)=>{const{layout:r,...t}=frontmatter;return t.file=file,t.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),waysToCreateArrays_____=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,slug,waysToCreateArrays_____};